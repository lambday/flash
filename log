rm libflash.so
g++ -O3 -std=c++14 -fPIC -c flash/statistics/HypothesisTest.cpp -I. -o flash/statistics/HypothesisTest.o
g++ -O3 -std=c++14 -fPIC -c flash/statistics/TwoDistributionTest.cpp -I. -o flash/statistics/TwoDistributionTest.o
g++ -O3 -std=c++14 -fPIC -c flash/statistics/TwoSampleTest.cpp -I. -o flash/statistics/TwoSampleTest.o
g++ -O3 -std=c++14 -fPIC -c flash/statistics/IndependenceTest.cpp -I. -o flash/statistics/IndependenceTest.o
g++ -O3 -std=c++14 -fPIC -c flash/statistics/OneDistributionTest.cpp -I. -o flash/statistics/OneDistributionTest.o
g++ -O3 -std=c++14 -fPIC -c flash/statistics/internals/DataFetcherFactory.cpp -I. -o flash/statistics/internals/DataFetcherFactory.o
g++ -O3 -std=c++14 -fPIC -c flash/statistics/internals/DataFetcher.cpp -I. -o flash/statistics/internals/DataFetcher.o
g++ -O3 -std=c++14 -fPIC -c flash/statistics/internals/StreamingDataFetcher.cpp -I. -o flash/statistics/internals/StreamingDataFetcher.o
g++ -O3 -std=c++14 -fPIC -c flash/statistics/internals/NextSamples.cpp -I. -o flash/statistics/internals/NextSamples.o
g++ -O3 -std=c++14 -fPIC -c flash/statistics/internals/InitPerFeature.cpp -I. -o flash/statistics/internals/InitPerFeature.o
g++ -O3 -std=c++14 -fPIC -c flash/statistics/internals/BlockwiseDetails.cpp -I. -o flash/statistics/internals/BlockwiseDetails.o
g++ -O3 -std=c++14 -fPIC -c flash/statistics/internals/DataManager.cpp -I. -o flash/statistics/internals/DataManager.o
g++ -O3 -std=c++14 -fPIC -c flash/statistics/internals/InitPerKernel.cpp -I. -o flash/statistics/internals/InitPerKernel.o
g++ -O3 -std=c++14 -fPIC -c flash/statistics/internals/KernelManager.cpp -I. -o flash/statistics/internals/KernelManager.o
g++ -O3 -std=c++14 -fPIC -shared flash/statistics/HypothesisTest.o flash/statistics/TwoDistributionTest.o flash/statistics/TwoSampleTest.o flash/statistics/IndependenceTest.o flash/statistics/OneDistributionTest.o flash/statistics/internals/DataFetcherFactory.o flash/statistics/internals/DataFetcher.o flash/statistics/internals/StreamingDataFetcher.o flash/statistics/internals/NextSamples.o flash/statistics/internals/InitPerFeature.o flash/statistics/internals/BlockwiseDetails.o flash/statistics/internals/DataManager.o flash/statistics/internals/InitPerKernel.o flash/statistics/internals/KernelManager.o -I. -o libflash.so -lshogun
rm flash/statistics/*.o flash/statistics/internals/*.o
g++ tests/DataFetcherTest.cpp -O3 -std=c++14 -Isrc -Lsrc -lflash -lshogun -o tests/DataFetcherTest
g++ tests/StreamingDataFetcherTest.cpp -O3 -std=c++14 -Isrc -Lsrc -lflash -lshogun -o tests/StreamingDataFetcherTest
g++ tests/InitPerFeatureTest.cpp -O3 -std=c++14 -Isrc -Lsrc -lflash -lshogun -o tests/InitPerFeatureTest
g++ tests/DataFetcherFactoryTest.cpp -O3 -std=c++14 -Isrc -Lsrc -lflash -lshogun -o tests/DataFetcherFactoryTest
g++ tests/DataManagerTest.cpp -O3 -std=c++14 -Isrc -Lsrc -lflash -lshogun -o tests/DataManagerTest
g++ tests/KernelManagerTest.cpp -O3 -std=c++14 -Isrc -Lsrc -lflash -lshogun -o tests/KernelManagerTest
==25584== Memcheck, a memory error detector
==25584== Copyright (C) 2002-2013, and GNU GPL'd, by Julian Seward et al.
==25584== Using Valgrind-3.10.1 and LibVEX; rerun with -h for copyright info
==25584== Command: tests/DataFetcherTest --leak-check=full --track-origins=yes
==25584== 
matrix=[
[	0,	3,	6,	9,	12,	15,	18,	21],
[	1,	4,	7,	10,	13,	16,	19,	22],
[	2,	5,	8,	11,	14,	17,	20,	23]
]
matrix=[
[	0,	3,	6,	9,	12,	15,	18,	21],
[	1,	4,	7,	10,	13,	16,	19,	22],
[	2,	5,	8,	11,	14,	17,	20,	23]
]
matrix=[
[	0,	3,	6,	9],
[	1,	4,	7,	10],
[	2,	5,	8,	11]
]
matrix=[
[	12,	15,	18,	21],
[	13,	16,	19,	22],
[	14,	17,	20,	23]
]
==25584== 
==25584== HEAP SUMMARY:
==25584==     in use at exit: 72,712 bytes in 2 blocks
==25584==   total heap usage: 378 allocs, 376 frees, 160,864 bytes allocated
==25584== 
==25584== LEAK SUMMARY:
==25584==    definitely lost: 0 bytes in 0 blocks
==25584==    indirectly lost: 0 bytes in 0 blocks
==25584==      possibly lost: 0 bytes in 0 blocks
==25584==    still reachable: 72,712 bytes in 2 blocks
==25584==         suppressed: 0 bytes in 0 blocks
==25584== Rerun with --leak-check=full to see details of leaked memory
==25584== 
==25584== For counts of detected and suppressed errors, rerun with: -v
==25584== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
==25585== Memcheck, a memory error detector
==25585== Copyright (C) 2002-2013, and GNU GPL'd, by Julian Seward et al.
==25585== Using Valgrind-3.10.1 and LibVEX; rerun with -h for copyright info
==25585== Command: tests/StreamingDataFetcherTest --leak-check=full --track-origins=yes
==25585== 
matrix=[
[	0,	3,	6,	9,	12,	15,	18,	21],
[	1,	4,	7,	10,	13,	16,	19,	22],
[	2,	5,	8,	11,	14,	17,	20,	23]
]
matrix=[
[	0,	3,	6,	9,	12,	15,	18,	21],
[	1,	4,	7,	10,	13,	16,	19,	22],
[	2,	5,	8,	11,	14,	17,	20,	23]
]
matrix=[
[	0,	3,	6,	9],
[	1,	4,	7,	10],
[	2,	5,	8,	11]
]
matrix=[
[	12,	15,	18,	21],
[	13,	16,	19,	22],
[	14,	17,	20,	23]
]
==25585== 
==25585== HEAP SUMMARY:
==25585==     in use at exit: 206,246 bytes in 278 blocks
==25585==   total heap usage: 960 allocs, 682 frees, 308,984 bytes allocated
==25585== 
==25585== LEAK SUMMARY:
==25585==    definitely lost: 152 bytes in 1 blocks
==25585==    indirectly lost: 119,036 bytes in 13 blocks
==25585==      possibly lost: 14,230 bytes in 256 blocks
==25585==    still reachable: 72,828 bytes in 8 blocks
==25585==         suppressed: 0 bytes in 0 blocks
==25585== Rerun with --leak-check=full to see details of leaked memory
==25585== 
==25585== For counts of detected and suppressed errors, rerun with: -v
==25585== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
==25588== Memcheck, a memory error detector
==25588== Copyright (C) 2002-2013, and GNU GPL'd, by Julian Seward et al.
==25588== Using Valgrind-3.10.1 and LibVEX; rerun with -h for copyright info
==25588== Command: tests/DataFetcherFactoryTest --leak-check=full --track-origins=yes
==25588== 
matrix=[
[	0,	3,	6,	9,	12,	15,	18,	21],
[	1,	4,	7,	10,	13,	16,	19,	22],
[	2,	5,	8,	11,	14,	17,	20,	23]
]
==25588== 
==25588== HEAP SUMMARY:
==25588==     in use at exit: 205,102 bytes in 263 blocks
==25588==   total heap usage: 497 allocs, 234 frees, 286,015 bytes allocated
==25588== 
==25588== LEAK SUMMARY:
==25588==    definitely lost: 392 bytes in 1 blocks
==25588==    indirectly lost: 131,882 bytes in 254 blocks
==25588==      possibly lost: 0 bytes in 0 blocks
==25588==    still reachable: 72,828 bytes in 8 blocks
==25588==         suppressed: 0 bytes in 0 blocks
==25588== Rerun with --leak-check=full to see details of leaked memory
==25588== 
==25588== For counts of detected and suppressed errors, rerun with: -v
==25588== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
==25589== Memcheck, a memory error detector
==25589== Copyright (C) 2002-2013, and GNU GPL'd, by Julian Seward et al.
==25589== Using Valgrind-3.10.1 and LibVEX; rerun with -h for copyright info
==25589== Command: tests/InitPerFeatureTest --leak-check=full --track-origins=yes
==25589== 
matrix=[
[	0,	3,	6,	9,	12,	15,	18,	21],
[	1,	4,	7,	10,	13,	16,	19,	22],
[	2,	5,	8,	11,	14,	17,	20,	23]
]
DataManager::samples_at()
InitPerFeature::Constructor()
InitPerFeature::Assignment() : setting the fetcher
InitPerFeature::Destructor()
DataManager::samples_at()
InitPerFeature::Constructor()
InitPerFeature::cast() : casting to feature type
DataManager::samples_at() const
InitPerFeature::Destructor()
==25589== 
==25589== HEAP SUMMARY:
==25589==     in use at exit: 72,712 bytes in 2 blocks
==25589==   total heap usage: 348 allocs, 346 frees, 159,928 bytes allocated
==25589== 
==25589== LEAK SUMMARY:
==25589==    definitely lost: 0 bytes in 0 blocks
==25589==    indirectly lost: 0 bytes in 0 blocks
==25589==      possibly lost: 0 bytes in 0 blocks
==25589==    still reachable: 72,712 bytes in 2 blocks
==25589==         suppressed: 0 bytes in 0 blocks
==25589== Rerun with --leak-check=full to see details of leaked memory
==25589== 
==25589== For counts of detected and suppressed errors, rerun with: -v
==25589== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
==25590== Memcheck, a memory error detector
==25590== Copyright (C) 2002-2013, and GNU GPL'd, by Julian Seward et al.
==25590== Using Valgrind-3.10.1 and LibVEX; rerun with -h for copyright info
==25590== Command: tests/DataManagerTest --leak-check=full --track-origins=yes
==25590== 
matrix=[
[	0,	3,	6,	9,	12,	15,	18,	21],
[	1,	4,	7,	10,	13,	16,	19,	22],
[	2,	5,	8,	11,	14,	17,	20,	23]
]
DataManager::samples_at()
InitPerFeature::Constructor()
InitPerFeature::Assignment() : setting the fetcher
InitPerFeature::Destructor()
DataManager::next()
NextSamples::acessing fetched sample at 0 using non-const access operator
NextSamples::acessing fetched sample at 0 using non-const access operator
matrix=[
[	0,	3,	6,	9,	12,	15,	18,	21],
[	1,	4,	7,	10,	13,	16,	19,	22],
[	2,	5,	8,	11,	14,	17,	20,	23]
]
DataManager::next()
NextSamples::acessing fetched sample at 0 using non-const access operator
block[0].size = 2
DataManager::next()
NextSamples::acessing fetched sample at 0 using non-const access operator
NextSamples::acessing fetched sample at 0 using non-const access operator
matrix=[
[	0,	3,	6,	9],
[	1,	4,	7,	10],
[	2,	5,	8,	11]
]
DataManager::next()
NextSamples::acessing fetched sample at 0 using non-const access operator
NextSamples::acessing fetched sample at 0 using non-const access operator
matrix=[
[	12,	15,	18,	21],
[	13,	16,	19,	22],
[	14,	17,	20,	23]
]
DataManager::next()
NextSamples::acessing fetched sample at 0 using non-const access operator
matrix=[
[	0,	3,	6,	9,	12,	15,	18,	21],
[	1,	4,	7,	10,	13,	16,	19,	22],
[	2,	5,	8,	11,	14,	17,	20,	23]
]
matrix=[
[	24,	27,	30,	33,	36,	39,	42,	45],
[	25,	28,	31,	34,	37,	40,	43,	46],
[	26,	29,	32,	35,	38,	41,	44,	47]
]
DataManager::samples_at()
InitPerFeature::Constructor()
InitPerFeature::Assignment() : setting the fetcher
InitPerFeature::Destructor()
DataManager::samples_at()
InitPerFeature::Constructor()
InitPerFeature::Assignment() : setting the fetcher
InitPerFeature::Destructor()
DataManager::next()
NextSamples::acessing fetched sample at 0 using non-const access operator
NextSamples::acessing fetched sample at 1 using non-const access operator
NextSamples::acessing fetched sample at 0 using non-const access operator
matrix=[
[	0,	3,	6,	9,	12,	15,	18,	21],
[	1,	4,	7,	10,	13,	16,	19,	22],
[	2,	5,	8,	11,	14,	17,	20,	23]
]
NextSamples::acessing fetched sample at 1 using non-const access operator
matrix=[
[	24,	27,	30,	33,	36,	39,	42,	45],
[	25,	28,	31,	34,	37,	40,	43,	46],
[	26,	29,	32,	35,	38,	41,	44,	47]
]
DataManager::next()
NextSamples::acessing fetched sample at 0 using non-const access operator
NextSamples::acessing fetched sample at 1 using non-const access operator
block[0].size = 1
block[1].size = 1
DataManager::next()
NextSamples::acessing fetched sample at 0 using non-const access operator
NextSamples::acessing fetched sample at 1 using non-const access operator
NextSamples::acessing fetched sample at 0 using non-const access operator
matrix=[
[	0,	3],
[	1,	4],
[	2,	5]
]
NextSamples::acessing fetched sample at 1 using non-const access operator
matrix=[
[	24,	27],
[	25,	28],
[	26,	29]
]
DataManager::next()
NextSamples::acessing fetched sample at 0 using non-const access operator
NextSamples::acessing fetched sample at 1 using non-const access operator
NextSamples::acessing fetched sample at 0 using non-const access operator
matrix=[
[	6,	9],
[	7,	10],
[	8,	11]
]
NextSamples::acessing fetched sample at 1 using non-const access operator
matrix=[
[	30,	33],
[	31,	34],
[	32,	35]
]
DataManager::next()
NextSamples::acessing fetched sample at 0 using non-const access operator
NextSamples::acessing fetched sample at 1 using non-const access operator
NextSamples::acessing fetched sample at 0 using non-const access operator
matrix=[
[	12,	15],
[	13,	16],
[	14,	17]
]
NextSamples::acessing fetched sample at 1 using non-const access operator
matrix=[
[	36,	39],
[	37,	40],
[	38,	41]
]
DataManager::next()
NextSamples::acessing fetched sample at 0 using non-const access operator
NextSamples::acessing fetched sample at 1 using non-const access operator
NextSamples::acessing fetched sample at 0 using non-const access operator
matrix=[
[	18,	21],
[	19,	22],
[	20,	23]
]
NextSamples::acessing fetched sample at 1 using non-const access operator
matrix=[
[	42,	45],
[	43,	46],
[	44,	47]
]
DataManager::next()
NextSamples::acessing fetched sample at 0 using non-const access operator
NextSamples::acessing fetched sample at 1 using non-const access operator
matrix=[
[	0,	3,	6,	9,	12,	15,	18,	21],
[	1,	4,	7,	10,	13,	16,	19,	22],
[	2,	5,	8,	11,	14,	17,	20,	23]
]
matrix=[
[	24,	27,	30,	33,	36,	39,	42,	45,	48,	51,	54,	57],
[	25,	28,	31,	34,	37,	40,	43,	46,	49,	52,	55,	58],
[	26,	29,	32,	35,	38,	41,	44,	47,	50,	53,	56,	59]
]
DataManager::samples_at()
InitPerFeature::Constructor()
InitPerFeature::Assignment() : setting the fetcher
InitPerFeature::Destructor()
DataManager::samples_at()
InitPerFeature::Constructor()
InitPerFeature::Assignment() : setting the fetcher
InitPerFeature::Destructor()
DataManager::next()
NextSamples::acessing fetched sample at 0 using non-const access operator
NextSamples::acessing fetched sample at 1 using non-const access operator
NextSamples::acessing fetched sample at 0 using non-const access operator
matrix=[
[	0,	3,	6,	9,	12,	15,	18,	21],
[	1,	4,	7,	10,	13,	16,	19,	22],
[	2,	5,	8,	11,	14,	17,	20,	23]
]
NextSamples::acessing fetched sample at 1 using non-const access operator
matrix=[
[	24,	27,	30,	33,	36,	39,	42,	45,	48,	51,	54,	57],
[	25,	28,	31,	34,	37,	40,	43,	46,	49,	52,	55,	58],
[	26,	29,	32,	35,	38,	41,	44,	47,	50,	53,	56,	59]
]
DataManager::next()
NextSamples::acessing fetched sample at 0 using non-const access operator
NextSamples::acessing fetched sample at 1 using non-const access operator
block[0].size = 2
block[1].size = 3
DataManager::next()
NextSamples::acessing fetched sample at 0 using non-const access operator
NextSamples::acessing fetched sample at 1 using non-const access operator
NextSamples::acessing fetched sample at 0 using non-const access operator
matrix=[
[	0,	3],
[	1,	4],
[	2,	5]
]
NextSamples::acessing fetched sample at 1 using non-const access operator
matrix=[
[	24,	27,	30],
[	25,	28,	31],
[	26,	29,	32]
]
DataManager::next()
NextSamples::acessing fetched sample at 0 using non-const access operator
NextSamples::acessing fetched sample at 1 using non-const access operator
NextSamples::acessing fetched sample at 0 using non-const access operator
matrix=[
[	6,	9],
[	7,	10],
[	8,	11]
]
NextSamples::acessing fetched sample at 1 using non-const access operator
matrix=[
[	33,	36,	39],
[	34,	37,	40],
[	35,	38,	41]
]
DataManager::next()
NextSamples::acessing fetched sample at 0 using non-const access operator
NextSamples::acessing fetched sample at 1 using non-const access operator
NextSamples::acessing fetched sample at 0 using non-const access operator
matrix=[
[	12,	15],
[	13,	16],
[	14,	17]
]
NextSamples::acessing fetched sample at 1 using non-const access operator
matrix=[
[	42,	45,	48],
[	43,	46,	49],
[	44,	47,	50]
]
DataManager::next()
NextSamples::acessing fetched sample at 0 using non-const access operator
NextSamples::acessing fetched sample at 1 using non-const access operator
NextSamples::acessing fetched sample at 0 using non-const access operator
matrix=[
[	18,	21],
[	19,	22],
[	20,	23]
]
NextSamples::acessing fetched sample at 1 using non-const access operator
matrix=[
[	51,	54,	57],
[	52,	55,	58],
[	53,	56,	59]
]
DataManager::next()
NextSamples::acessing fetched sample at 0 using non-const access operator
NextSamples::acessing fetched sample at 1 using non-const access operator
matrix=[
[	0,	3,	6,	9,	12,	15,	18,	21],
[	1,	4,	7,	10,	13,	16,	19,	22],
[	2,	5,	8,	11,	14,	17,	20,	23]
]
DataManager::samples_at()
InitPerFeature::Constructor()
InitPerFeature::Assignment() : setting the fetcher
InitPerFeature::Destructor()
DataManager::num_samples_at()
DataManager::next()
NextSamples::acessing fetched sample at 0 using non-const access operator
NextSamples::acessing fetched sample at 0 using non-const access operator
matrix=[
[	0,	3,	6,	9,	12,	15,	18,	21],
[	1,	4,	7,	10,	13,	16,	19,	22],
[	2,	5,	8,	11,	14,	17,	20,	23]
]
DataManager::next()
NextSamples::acessing fetched sample at 0 using non-const access operator
block[0].size = 2
DataManager::next()
NextSamples::acessing fetched sample at 0 using non-const access operator
NextSamples::acessing fetched sample at 0 using non-const access operator
matrix=[
[	0,	3,	6,	9],
[	1,	4,	7,	10],
[	2,	5,	8,	11]
]
DataManager::next()
NextSamples::acessing fetched sample at 0 using non-const access operator
NextSamples::acessing fetched sample at 0 using non-const access operator
matrix=[
[	12,	15,	18,	21],
[	13,	16,	19,	22],
[	14,	17,	20,	23]
]
DataManager::next()
NextSamples::acessing fetched sample at 0 using non-const access operator
matrix=[
[	0,	3,	6,	9,	12,	15,	18,	21],
[	1,	4,	7,	10,	13,	16,	19,	22],
[	2,	5,	8,	11,	14,	17,	20,	23]
]
DataManager::samples_at()
InitPerFeature::Constructor()
InitPerFeature::Assignment() : setting the fetcher
InitPerFeature::Destructor()
DataManager::num_samples_at()
DataManager::next()
NextSamples::acessing fetched sample at 0 using non-const access operator
NextSamples::acessing fetched sample at 0 using non-const access operator
matrix=[
[	0,	3,	6,	9,	12,	15,	18,	21],
[	1,	4,	7,	10,	13,	16,	19,	22],
[	2,	5,	8,	11,	14,	17,	20,	23]
]
DataManager::next()
NextSamples::acessing fetched sample at 0 using non-const access operator
block[0].size = 2
DataManager::next()
NextSamples::acessing fetched sample at 0 using non-const access operator
NextSamples::acessing fetched sample at 0 using non-const access operator
matrix=[
[	0,	3,	6,	9],
[	1,	4,	7,	10],
[	2,	5,	8,	11]
]
DataManager::next()
NextSamples::acessing fetched sample at 0 using non-const access operator
NextSamples::acessing fetched sample at 0 using non-const access operator
matrix=[
[	12,	15,	18,	21],
[	13,	16,	19,	22],
[	14,	17,	20,	23]
]
DataManager::next()
NextSamples::acessing fetched sample at 0 using non-const access operator
matrix=[
[	0,	3,	6,	9,	12,	15,	18,	21],
[	1,	4,	7,	10,	13,	16,	19,	22],
[	2,	5,	8,	11,	14,	17,	20,	23]
]
matrix=[
[	24,	27,	30,	33,	36,	39,	42,	45,	48,	51,	54,	57],
[	25,	28,	31,	34,	37,	40,	43,	46,	49,	52,	55,	58],
[	26,	29,	32,	35,	38,	41,	44,	47,	50,	53,	56,	59]
]
DataManager::samples_at()
InitPerFeature::Constructor()
InitPerFeature::Assignment() : setting the fetcher
InitPerFeature::Destructor()
DataManager::samples_at()
InitPerFeature::Constructor()
InitPerFeature::Assignment() : setting the fetcher
InitPerFeature::Destructor()
DataManager::num_samples_at()
DataManager::num_samples_at()
DataManager::next()
NextSamples::acessing fetched sample at 0 using non-const access operator
NextSamples::acessing fetched sample at 1 using non-const access operator
NextSamples::acessing fetched sample at 0 using non-const access operator
matrix=[
[	0,	3,	6,	9,	12,	15,	18,	21],
[	1,	4,	7,	10,	13,	16,	19,	22],
[	2,	5,	8,	11,	14,	17,	20,	23]
]
NextSamples::acessing fetched sample at 1 using non-const access operator
matrix=[
[	24,	27,	30,	33,	36,	39,	42,	45,	48,	51,	54,	57],
[	25,	28,	31,	34,	37,	40,	43,	46,	49,	52,	55,	58],
[	26,	29,	32,	35,	38,	41,	44,	47,	50,	53,	56,	59]
]
DataManager::next()
NextSamples::acessing fetched sample at 0 using non-const access operator
NextSamples::acessing fetched sample at 1 using non-const access operator
block[0].size = 2
block[1].size = 3
DataManager::next()
NextSamples::acessing fetched sample at 0 using non-const access operator
NextSamples::acessing fetched sample at 1 using non-const access operator
NextSamples::acessing fetched sample at 0 using non-const access operator
matrix=[
[	0,	3],
[	1,	4],
[	2,	5]
]
NextSamples::acessing fetched sample at 1 using non-const access operator
matrix=[
[	24,	27,	30],
[	25,	28,	31],
[	26,	29,	32]
]
DataManager::next()
NextSamples::acessing fetched sample at 0 using non-const access operator
NextSamples::acessing fetched sample at 1 using non-const access operator
NextSamples::acessing fetched sample at 0 using non-const access operator
matrix=[
[	6,	9],
[	7,	10],
[	8,	11]
]
NextSamples::acessing fetched sample at 1 using non-const access operator
matrix=[
[	33,	36,	39],
[	34,	37,	40],
[	35,	38,	41]
]
DataManager::next()
NextSamples::acessing fetched sample at 0 using non-const access operator
NextSamples::acessing fetched sample at 1 using non-const access operator
NextSamples::acessing fetched sample at 0 using non-const access operator
matrix=[
[	12,	15],
[	13,	16],
[	14,	17]
]
NextSamples::acessing fetched sample at 1 using non-const access operator
matrix=[
[	42,	45,	48],
[	43,	46,	49],
[	44,	47,	50]
]
DataManager::next()
NextSamples::acessing fetched sample at 0 using non-const access operator
NextSamples::acessing fetched sample at 1 using non-const access operator
NextSamples::acessing fetched sample at 0 using non-const access operator
matrix=[
[	18,	21],
[	19,	22],
[	20,	23]
]
NextSamples::acessing fetched sample at 1 using non-const access operator
matrix=[
[	51,	54,	57],
[	52,	55,	58],
[	53,	56,	59]
]
DataManager::next()
NextSamples::acessing fetched sample at 0 using non-const access operator
NextSamples::acessing fetched sample at 1 using non-const access operator
==25590== 
==25590== HEAP SUMMARY:
==25590==     in use at exit: 606,596 bytes in 1,088 blocks
==25590==   total heap usage: 4,931 allocs, 3,843 frees, 850,460 bytes allocated
==25590== 
==25590== LEAK SUMMARY:
==25590==    definitely lost: 608 bytes in 4 blocks
==25590==    indirectly lost: 476,144 bytes in 52 blocks
==25590==      possibly lost: 57,016 bytes in 1,024 blocks
==25590==    still reachable: 72,828 bytes in 8 blocks
==25590==         suppressed: 0 bytes in 0 blocks
==25590== Rerun with --leak-check=full to see details of leaked memory
==25590== 
==25590== For counts of detected and suppressed errors, rerun with: -v
==25590== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
==25599== Memcheck, a memory error detector
==25599== Copyright (C) 2002-2013, and GNU GPL'd, by Julian Seward et al.
==25599== Using Valgrind-3.10.1 and LibVEX; rerun with -h for copyright info
==25599== Command: tests/KernelManagerTest --leak-check=full --track-origins=yes
==25599== 
matrix=[
[	0,	3,	6,	9,	12,	15,	18,	21],
[	1,	4,	7,	10,	13,	16,	19,	22],
[	2,	5,	8,	11,	14,	17,	20,	23]
]
KernelManager::kernel_at() : setting the kernel 0
KernelManager::kernel_at() : getting the kernel 0
KernelManager::kernel_at() : getting the kernel 0
KernelManager::precompute_kernel_at() : precomputing the kernel 0
KernelManager::kernel_at() : getting the kernel 0
KernelManager::precompute_kernel_at() : restoring the kernel 0
KernelManager::kernel_at() : getting the kernel 0
==25599== 
==25599== HEAP SUMMARY:
==25599==     in use at exit: 72,712 bytes in 2 blocks
==25599==   total heap usage: 884 allocs, 882 frees, 185,607 bytes allocated
==25599== 
==25599== LEAK SUMMARY:
==25599==    definitely lost: 0 bytes in 0 blocks
==25599==    indirectly lost: 0 bytes in 0 blocks
==25599==      possibly lost: 0 bytes in 0 blocks
==25599==    still reachable: 72,712 bytes in 2 blocks
==25599==         suppressed: 0 bytes in 0 blocks
==25599== Rerun with --leak-check=full to see details of leaked memory
==25599== 
==25599== For counts of detected and suppressed errors, rerun with: -v
==25599== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
